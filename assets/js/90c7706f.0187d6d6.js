(self.webpackChunkpersonal_blog=self.webpackChunkpersonal_blog||[]).push([[5770],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(n),m=r,h=c["".concat(s,".").concat(m)]||c[m]||p[m]||a;return n?o.createElement(h,i(i({ref:t},u),{},{components:n})):o.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<a;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7918:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d},default:function(){return p}});var o=n(2122),r=n(9756),a=(n(7294),n(3905)),i=["components"],l={id:"videos-about-software-development",title:"Interesting videos about Sofware Development",sidebar_label:"Software Development."},s={unversionedId:"videos-about-software-development",id:"videos-about-software-development",isDocsHomePage:!1,title:"Interesting videos about Sofware Development",description:"Thinking Small is Changing Software Development",source:"@site/docs/videos-about-software-development.md",sourceDirName:".",slug:"/videos-about-software-development",permalink:"/docs/videos-about-software-development",version:"current",sidebar_label:"Software Development.",frontMatter:{id:"videos-about-software-development",title:"Interesting videos about Sofware Development",sidebar_label:"Software Development."},sidebar:"someSidebar",previous:{title:"Interesting videos about Agile",permalink:"/docs/videos-about-agile"},next:{title:"Interesting videos about code Architecture",permalink:"/docs/videos-about-architecture"}},d=[{value:"Thinking Small is Changing Software Development",id:"thinking-small-is-changing-software-development",children:[]},{value:"TDD for those who don't need it",id:"tdd-for-those-who-dont-need-it",children:[]},{value:"TDD, Where Did It All Go Wrong",id:"tdd-where-did-it-all-go-wrong",children:[]},{value:"The Three Laws of TDD",id:"the-three-laws-of-tdd",children:[]}],u={toc:d};function p(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"thinking-small-is-changing-software-development"},(0,a.kt)("a",{parentName:"h2",href:"https://youtu.be/YCQMiFF9QXM"},"Thinking Small is Changing Software Development")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"How Thinking Small is Changing Software Development Big Time \u2022 Sander Hoogendoorn")),(0,a.kt)("h2",{id:"tdd-for-those-who-dont-need-it"},(0,a.kt)("a",{parentName:"h2",href:"https://youtu.be/a6oP24CSdUg"},"TDD for those who don't need it")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Gopher con")),(0,a.kt)("h2",{id:"tdd-where-did-it-all-go-wrong"},(0,a.kt)("a",{parentName:"h2",href:"https://youtu.be/EZ05e7EMOLM"},"TDD, Where Did It All Go Wrong")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"TDD slows you down "),(0,a.kt)("li",{parentName:"ul"},"Lean software development drop tests"),(0,a.kt)("li",{parentName:"ul"},"Duct tape programming guys are winning because they ship the code "),(0,a.kt)("li",{parentName:"ul"},"when we return to our tests we don\u2019t understand what\u2019s going on "),(0,a.kt)("li",{parentName:"ul"},"Sometimes the test don\u2019t really do anything, just testing the mocks (that\u2019s great)"),(0,a.kt)("li",{parentName:"ul"},"ATDD??"),(0,a.kt)("li",{parentName:"ul"},"blaming how made the Test red"),(0,a.kt)("li",{parentName:"ul"},"Developers don\u2019t see the value of them "),(0,a.kt)("li",{parentName:"ul"},"TDD is dead long live testing (article by David heinemier)"),(0,a.kt)("li",{parentName:"ul"},"Avoid testing implementation, test behaviors "),(0,a.kt)("li",{parentName:"ul"},"A trigger for a test should be an requirement, not a new class "),(0,a.kt)("li",{parentName:"ul"},"you do not test code, you test behaviors "),(0,a.kt)("li",{parentName:"ul"},"During the red green phase, we should do code as the duck tape developers do: as shit as possible, and refactor later"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://dhh.dk/2014/tdd-is-dead-long-live-testing.html"},"TDD is dead. Long live testing.")," ",(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"Summary:"))),(0,a.kt)("li",{parentName:"ul"},"write dirty code to get to green, then refactor "),(0,a.kt)("li",{parentName:"ul"},"No new test for refactored internal and private methods"),(0,a.kt)("li",{parentName:"ul"},"Both develop and accept against test written on a port"),(0,a.kt)("li",{parentName:"ul"},"Add integration tests for coverage of ports to adapters"),(0,a.kt)("li",{parentName:"ul"},"Add system test for end to end confidence"),(0,a.kt)("li",{parentName:"ul"},"Don\u2019t mock internal, private or adapters")),(0,a.kt)("h2",{id:"the-three-laws-of-tdd"},(0,a.kt)("a",{parentName:"h2",href:"https://youtu.be/qkblc5WRn-U"},"The Three Laws of TDD")),(0,a.kt)("p",null,"He compares tests to doctors cleaning  they\u2019r hands before a surgery, there was a time that it was not a common practice.\nyou should not be good in debugging, you must be good at coding.\ncode examples are like tests, they must explain the code, and they should not be dependent.\nIt\u2019s not funny to write tests after the code because we already know how the code works. When you come across a hard code to test. its because its not designed to be tested.\nIf you write a test first, is hard to write a code that is hard to test, because its designed for that."))}p.isMDXComponent=!0}}]);