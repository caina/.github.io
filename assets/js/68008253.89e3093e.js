(self.webpackChunkpersonal_blog=self.webpackChunkpersonal_blog||[]).push([[4425],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return h}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),h=o,m=d["".concat(l,".").concat(h)]||d[h]||c[h]||r;return n?a.createElement(m,s(s({ref:t},u),{},{components:n})):a.createElement(m,s({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4712:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p},default:function(){return c}});var a=n(2122),o=n(9756),r=(n(7294),n(3905)),s=["components"],i={id:"frontend-angular-react-architecture-scales",title:"Front-end for Single page applications(Angular, React, Vue) that scales with your team and how to makes sense of it.",tags:["angular","react","front-end"]},l={permalink:"/blog/2019/11/20/frontend-angular-react-architecture-scales",source:"@site/blog/2019-11-20-frontend-angular-react-architecture-scales.md",title:"Front-end for Single page applications(Angular, React, Vue) that scales with your team and how to makes sense of it.",description:"creative-patrck-front-end",date:"2019-11-20T00:00:00.000Z",formattedDate:"November 20, 2019",tags:[{label:"angular",permalink:"/blog/tags/angular"},{label:"react",permalink:"/blog/tags/react"},{label:"front-end",permalink:"/blog/tags/front-end"}],readingTime:5.71,truncated:!0,prevItem:{title:"The weight of a dependency in a modern SPA application",permalink:"/blog/2020/01/05/front-end-weight-of-node-modules"},nextItem:{title:"Creating a featureToggle directive in Angular.",permalink:"/blog/2019/10/09/angular-simple-feature-toggle-that-works-outside-of-the-route"}},p=[{value:"Front-end Its all about Data",id:"front-end-its-all-about-data",children:[]},{value:"Data manipulation between components at different levels",id:"data-manipulation-between-components-at-different-levels",children:[]},{value:"Layers",id:"layers",children:[]},{value:"Folder strucure",id:"folder-strucure",children:[]}],u={toc:p};function c(e){var t=e.components,i=(0,o.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"creative-patrck-front-end",src:n(7437).Z})),(0,r.kt)("p",null,"In over 3 years of this new SPA world, I've seen a-lot and today, I want to explain how I structure things arround. as an disclosure, I'm not saying that's a silver bullet, you might have to change it to fit your needs."),(0,r.kt)("h3",{id:"front-end-its-all-about-data"},"Front-end Its all about Data"),(0,r.kt)("p",null,"When I started on this web thing, front-end was just a way to display information, and I still think that's true. Even though the internet those days is impressive fast, any megabyte to open a website may be a problem. Moreover, we have a boom of mobile devices and bad 3g signals are quite normal."),(0,r.kt)("p",null,"Taking this into consideration, the app must be just a reflection of the information to display. Any kind of business logic must be executed in the backend, where you have more memory and execution power."),(0,r.kt)("h3",{id:"data-manipulation-between-components-at-different-levels"},"Data manipulation between components at different levels"),(0,r.kt)("p",null,"The biggest problem that I've faced with SPA's is the iteration between components in different locations. Let's say that we have an e-commerce, and every time the user press a like button under the product description, this product goes to a list in the header. You can easily send an API request to the backend with the product id and user, but how would you notify the header that there is a new product to display?"),(0,r.kt)("p",null,"Well most of my previous project, we couple the header and the like button with a function, so when we like the header updates. In angular, you could create a service and share its logic and in React a Redux store could solve it, but then, the header and the product detail would have a relation that would not be that clear."),(0,r.kt)("p",null,"This can work for some time, but as the application will grow, these components will be so strongly coupled, that you'll end up redoing the same component over and over again, or worst, start to have some really hard bugs to fix."),(0,r.kt)("h3",{id:"layers"},"Layers"),(0,r.kt)("p",null,"I like to break my applications into 3 layers (That's not a rule but I like to follow it as much as possible). We have the ",(0,r.kt)("strong",{parentName:"p"},"Logic components"),", the ",(0,r.kt)("strong",{parentName:"p"},"Behaviour components"),", and the ",(0,r.kt)("strong",{parentName:"p"},"Dummy components"),", I'm not talking anything new but let\u2019s dive into this."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},'The number of components layers is important because if it starts to get to "deep", would be hard to make sense of your code.')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Component"),(0,r.kt)("th",{parentName:"tr",align:null},"Reusability"),(0,r.kt)("th",{parentName:"tr",align:null},"What it is use to"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Logic components")),(0,r.kt)("td",{parentName:"tr",align:null},"None"),(0,r.kt)("td",{parentName:"tr",align:null},"Interact with Api's and mount the structure for the Behaviour components.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Behaviour components")),(0,r.kt)("td",{parentName:"tr",align:null},"Somehow, but unlike"),(0,r.kt)("td",{parentName:"tr",align:null},"Group the dumb components, imagine a form that enables a button if all the fields are set, or a password and repeat password interaction, the behaviour component would do this logic.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Dummy components")),(0,r.kt)("td",{parentName:"tr",align:null},"All the time"),(0,r.kt)("td",{parentName:"tr",align:null},"this component must receive everything as a dependency.")))),(0,r.kt)("p",null,"Summing up: The first layer calls the backend to get a list of products, send them to a component to distribute the data across the dumb layer."),(0,r.kt)("h3",{id:"folder-strucure"},"Folder strucure"),(0,r.kt)("p",null," So, this is really important, no folder has more than 7 files, more than that and you'll get lost. "),(0,r.kt)("p",null,"But ",(0,r.kt)("strong",{parentName:"p"},"HOW")," is it possible? 1 module in angular has at least 5 files! Well, bear with me.\n",(0,r.kt)("img",{alt:"questions-patrick",src:n(897).Z})),(0,r.kt)("p",null,"Imagine that every ",(0,r.kt)("strong",{parentName:"p"},"Page"),' is a flow of your app, some people call it even Scenes, because they describe a scene of your app. So we have then a pages folder to list all this "flows", every flow has a sub-flow, every flow has specific components and so on, check out this scaffold. '),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"+-config.js\n+-routes.js\n+-app.js\n+--i18n/\n|  |-index.js\n|  |-en.js\n|  |-pt_br.js\n+--components/\n|  |-Button.js\n+--pages/\n|  +-store.js\n|  +-login/\n|   |-- login.page.js\n|   |-- login.service.js\n|   |-- components/\n|   |   +- login-form.component.js\n|  +-blog/\n|  |   +- blog.store.js\n|  |   +- blog.service.js\n|  |   +- components/\n|  |   |  +-- post-avatar.js\n|  |   |  +-- comment-button.js\n|  |   +- post/\n|  |   |  +- post.service.js\n|  |   |  +- post.page.js\n|  |   +- post-detail/\n|  |   |  +- post-detail.page.js\n|  |   |  +- post-detail.service.js\n|  |   |  +- components/\n|  |   |    |-- user-comment.js\n|  |   |    |-- hero-banner.js\n|  |   |    |-- post-content.js\n|  |   +- post-create/\n|  |   |  +- post-create.page.js\n|  |   |  +- post-create.service.js\n")),(0,r.kt)("p",null,"As the root of our app, we want to configure things and everything related to the bootstrap phase, if you run into multiple files with similar goals, try to create folders here, like the ",(0,r.kt)("inlineCode",{parentName:"p"},"i18n/"),". But usually, here we only configure things."),(0,r.kt)("p",null,'In the same level, we have our pages, the "flows" that we were talking about. In this case, it\'s the login and blog sections, they are combining flows that share responsibilities, like the blog section that has posts and everything related to its creation, doing so we can easily share they services and components. '),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Login could be part of a ",(0,r.kt)("strong",{parentName:"p"},"user")," module if you think in the relation of the data between the login phase and user manipulation, although they would hardly share visual components.")),(0,r.kt)("p",null,"Under the ",(0,r.kt)("strong",{parentName:"p"},"pages/post")," we have a chain of flows, they have at a certain level shared data or components, in an Angular application would be easy to share models and services here. Most of the times I end up with this ",(0,r.kt)("inlineCode",{parentName:"p"},"components")," folder under the main flow folder to share components seems weird to have this folder spread across the app but in my head it makes sense, I don't want to span the main components folder with things that are not ready to be shared to all levels of our app."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"IMPORTANT: The components under ",(0,r.kt)("inlineCode",{parentName:"p"},"pages/blog/post/post-detail/components")," don't do any kind of business logic, all of its information comes as properties, and every action is a dependency that comes as a property as well, they will NEVER be connected by redux, they'll never have a service injected in their constructor or any sort of smart interaction. Its easier to test something that we control.")),(0,r.kt)("p",null,'You might be thinking to yourself: "Why the user-comment component under the post folder doesn\u2019t retrieve the comments by his own?". Well, imagine that you want to have the number of total comments in the hero-banner component, as they are siblings, you would have to download this information under the comments section, send it back to ',(0,r.kt)("inlineCode",{parentName:"p"},"post-detail.page.js")," and then send it back to ",(0,r.kt)("inlineCode",{parentName:"p"},"hero-banner.js"),". This would create a tight coupling between both components, they'll not be a unit by themself, they will be hard to test and when one of this small components break, it would end up breaking its entire environment."),(0,r.kt)("p",null,"So this is the architecture that I use all the time, It works pretty well in most of the cases, thanks for reading \ud83d\ude17"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"tranks for reading patrick",src:n(4139).Z})),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.google.com/presentation/d/1iDQN3p5Upzv8t_q6sT-K8pF9Kgt5qeb7YjC9uOsV8_c/edit?usp=sharing"},"Slides of the talk")))}c.isMDXComponent=!0},897:function(e,t,n){"use strict";t.Z=n.p+"assets/images/bla-bla-bla-patrick-e787f7756ea1b55eb19eac1c0ea72f23.jpg"},7437:function(e,t,n){"use strict";t.Z=n.p+"assets/images/creative-patrick-bcc4fb47f072235db030aec038466ffe.gif"},4139:function(e,t,n){"use strict";t.Z=n.p+"assets/images/patrick-goodbye-54e16aa959718e86661eaa55abbfd3a3.gif"}}]);